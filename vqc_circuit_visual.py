# -*- coding: utf-8 -*-
"""VQC_Circuit_Visual.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1_8hMbZCMtpbFMXqmUu57hOKuDTwKoZEG
"""

import pennylane as qml
from pennylane import numpy as np
import matplotlib.pyplot as plt

# Quantum circuit parameters
n_qubits = 2  # Reduced number of qubits
n_layers = 2  # Reduced number of layers

# Quantum device
dev = qml.device("default.qubit", wires=n_qubits)

# Quantum circuit
def circuit(params, state):
    qml.AngleEmbedding(state, wires=range(n_qubits), rotation='Y')
    qml.StronglyEntanglingLayers(params, wires=range(n_qubits))
    return [qml.expval(qml.PauliZ(i)) for i in range(n_qubits)]

# Initialize random parameters for visualization
params = 0.1 * np.random.randn(n_layers, n_qubits, 3)

@qml.qnode(dev)
def Q_network(params, state):
    return circuit(params, state)

# Example state for visualization
state = np.random.randn(n_qubits)

# Draw the circuit
drawer = qml.draw(Q_network)
print(drawer(params, state))

# Optionally, save the text-based circuit diagram to a file
with open("circuit_diagram.txt", "w") as f:
    f.write(drawer(params, state))